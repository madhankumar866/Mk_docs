apiVersion: v1
kind: Service
metadata:
  name: proxy-service-externalname
  # namespace: proxy-test
spec:
  type: ExternalName
  externalName: "d1j4mvonfthijh.cloudfront.net"

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/upstream-vhost: "d1j4mvonfthijh.cloudfront.net"
    # nginx.ingress.kubernetes.io/upstream-url: "d2bktynw3n4si0.cloudfront.net/ei5Q3PdA/47n4l0Ca/ENYHtb4t3xjL/Cz5mgD"

    nginx.ingress.kubernetes.io/use-regex: "true"

    # nginx.ingress.kubernetes.io/server-snippet: |
    #   set $upstream_cloudflare http://d1j4mvonfthijh.cloudfront.net/ei5Q3PdA/47n4l0Ca/ENYHtb4t3xjL/Cz5mgD;

    #   location ~ "/([a-z-]{16}-[0-9-]{2})/([a-z-]{8},[a-z-]{3}~[a-z-]{4})/((.*)\.+([a-zA-Z]{3,4}))/([A-Z-]{8}![A-Z-]{16})/([a-z-]{12}-)([a-zA-Z0-9-]{3})/([0-9-]{3}_[a-z-]{5})$" {
    #     proxy_pass $upstream_cloudflare/$3;
    #   }      
    # nginx.ingress.kubernetes.io/server-snippet: |
    #   set $upstream_cloudflare http://d1j4mvonfthijh.cloudfront.net/ei5Q3PdA/47n4l0Ca/ENYHtb4t3xjL/Cz5mgD;
    #   location ~ "/([a-z-]{16}-[0-9-]{2})/([a-z-]{8},[a-z-]{3}~[a-z-]{4})/((.*)\.+([a-zA-Z]{3,4}))/([A-Z-]{8}![A-Z-]{16})/([a-z-]{12}-)([a-zA-Z0-9-]{3})/([0-9-]{3}_[a-z-]{5})$" {
    #   proxy_set_header Host $host;
    #   proxy_pass $upstream_cloudflare/$3;
    #   # proxy_pass $upstream_cloudflare/$3$is_args$args; 
    #   }
    nginx.ingress.kubernetes.io/server-snippet: |
      # location ~ "^/([A-Z0-9-]{16}%7E[A-Z0-9-]{12})/([a-z-]{8},[a-z-]{7}~[a-z-]{7})/(.*\.jpg)/.*$" {
      # set $proxy_path "/ei5Q3PdA/47n4l0Ca/ENYHtb4t3xjL/Cz5mgD/$3";
      # proxy_set_header Host $host;
      # proxy_pass http://d1j4mvonfthijh.cloudfront.net$proxy_path;
      # }

      set $upstream_cloudfare http://d2bktynw3n4si0.cloudfront.net/ei5Q3PdA/47n4l0Ca/ENYHtb4t3xjL/Cz5mgD;
      location ~ "/([a-z-]{16}-[0-9-]{2})/([a-z-]{8},[a-z-]{3}~[a-z-]{4})/((.*)\.+([a-zA-Z]{3,4}))/([A-Z-]{8}![A-Z-]{16})/([a-z-]{12}-)([a-zA-Z0-9-]{3})/([0-9-]{3}_[a-z-]{5})$" {
      proxy_pass $upstream_cloudfare/$3;
        }


  name: proxy-service-externalname-ingress
  # namespace: proxy-test
spec:
  rules:
  - host: hello-world.info
    http:
      paths:
      - backend:
          service:
            name: proxy-service-externalname # Here you specify the name of the ExternalName Service traffic must be routed to
            port:
              number: 80
        path: /
        pathType: Prefix